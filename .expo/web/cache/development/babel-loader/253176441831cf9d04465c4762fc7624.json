{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as Animatable from 'react-native-animatable';\nimport LinearGradient from 'react-native-linear-gradient';\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport Feather from \"@expo/vector-icons/Feather\";\nimport { useTheme } from 'react-native-paper';\nimport { AuthContext } from \"../components/context\";\nimport Users from \"../model/users\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar SignInScreen = function SignInScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsx(View, {\n    style: styles.container,\n    children: \"Sign In Screen\"\n  });\n};\n\nexport default SignInScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#009387'\n  },\n  header: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    paddingHorizontal: 20,\n    paddingBottom: 50\n  },\n  footer: {\n    flex: 3,\n    backgroundColor: '#fff',\n    borderTopLeftRadius: 30,\n    borderTopRightRadius: 30,\n    paddingHorizontal: 20,\n    paddingVertical: 30\n  },\n  text_header: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 30\n  },\n  text_footer: {\n    color: '#05375a',\n    fontSize: 18\n  },\n  action: {\n    flexDirection: 'row',\n    marginTop: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#f2f2f2',\n    paddingBottom: 5\n  },\n  actionError: {\n    flexDirection: 'row',\n    marginTop: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#FF0000',\n    paddingBottom: 5\n  },\n  textInput: {\n    flex: 1,\n    marginTop: Platform.OS === 'ios' ? 0 : -12,\n    paddingLeft: 10,\n    color: '#05375a'\n  },\n  errorMsg: {\n    color: '#FF0000',\n    fontSize: 14\n  },\n  button: {\n    alignItems: 'center',\n    marginTop: 50\n  },\n  signIn: {\n    width: '100%',\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10\n  },\n  textSign: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["C:/Users/Serious/Desktop/Native/Новая папка (2)/my-app/screens/SignInScreen.js"],"names":["React","Animatable","LinearGradient","FontAwesome","Feather","useTheme","AuthContext","Users","SignInScreen","navigation","styles","container","StyleSheet","create","flex","backgroundColor","header","justifyContent","paddingHorizontal","paddingBottom","footer","borderTopLeftRadius","borderTopRightRadius","paddingVertical","text_header","color","fontWeight","fontSize","text_footer","action","flexDirection","marginTop","borderBottomWidth","borderBottomColor","actionError","textInput","Platform","OS","paddingLeft","errorMsg","button","alignItems","signIn","width","height","borderRadius","textSign"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;;AAWA,OAAO,KAAKC,UAAZ,MAA4B,yBAA5B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,WAAP;AACA,OAAOC,OAAP;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,SAASC,WAAT;AAEA,OAAOC,KAAP;;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;AA4FnC,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA,IADF;AAkIH,CA9ND;;AAgOA,eAAeH,YAAf;AAEA,IAAME,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE;AAFR,GADkB;AAK7BC,EAAAA,MAAM,EAAE;AACJF,IAAAA,IAAI,EAAE,CADF;AAEJG,IAAAA,cAAc,EAAE,UAFZ;AAGJC,IAAAA,iBAAiB,EAAE,EAHf;AAIJC,IAAAA,aAAa,EAAE;AAJX,GALqB;AAW7BC,EAAAA,MAAM,EAAE;AACJN,IAAAA,IAAI,EAAE,CADF;AAEJC,IAAAA,eAAe,EAAE,MAFb;AAGJM,IAAAA,mBAAmB,EAAE,EAHjB;AAIJC,IAAAA,oBAAoB,EAAE,EAJlB;AAKJJ,IAAAA,iBAAiB,EAAE,EALf;AAMJK,IAAAA,eAAe,EAAE;AANb,GAXqB;AAmB7BC,EAAAA,WAAW,EAAE;AACTC,IAAAA,KAAK,EAAE,MADE;AAETC,IAAAA,UAAU,EAAE,MAFH;AAGTC,IAAAA,QAAQ,EAAE;AAHD,GAnBgB;AAwB7BC,EAAAA,WAAW,EAAE;AACTH,IAAAA,KAAK,EAAE,SADE;AAETE,IAAAA,QAAQ,EAAE;AAFD,GAxBgB;AA4B7BE,EAAAA,MAAM,EAAE;AACJC,IAAAA,aAAa,EAAE,KADX;AAEJC,IAAAA,SAAS,EAAE,EAFP;AAGJC,IAAAA,iBAAiB,EAAE,CAHf;AAIJC,IAAAA,iBAAiB,EAAE,SAJf;AAKJd,IAAAA,aAAa,EAAE;AALX,GA5BqB;AAmC7Be,EAAAA,WAAW,EAAE;AACTJ,IAAAA,aAAa,EAAE,KADN;AAETC,IAAAA,SAAS,EAAE,EAFF;AAGTC,IAAAA,iBAAiB,EAAE,CAHV;AAITC,IAAAA,iBAAiB,EAAE,SAJV;AAKTd,IAAAA,aAAa,EAAE;AALN,GAnCgB;AA0C7BgB,EAAAA,SAAS,EAAE;AACPrB,IAAAA,IAAI,EAAE,CADC;AAEPiB,IAAAA,SAAS,EAAEK,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,CAAxB,GAA4B,CAAC,EAFjC;AAGPC,IAAAA,WAAW,EAAE,EAHN;AAIPb,IAAAA,KAAK,EAAE;AAJA,GA1CkB;AAgD7Bc,EAAAA,QAAQ,EAAE;AACNd,IAAAA,KAAK,EAAE,SADD;AAENE,IAAAA,QAAQ,EAAE;AAFJ,GAhDmB;AAoD7Ba,EAAAA,MAAM,EAAE;AACJC,IAAAA,UAAU,EAAE,QADR;AAEJV,IAAAA,SAAS,EAAE;AAFP,GApDqB;AAwD7BW,EAAAA,MAAM,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,MAAM,EAAE,EAFJ;AAGJ3B,IAAAA,cAAc,EAAE,QAHZ;AAIJwB,IAAAA,UAAU,EAAE,QAJR;AAKJI,IAAAA,YAAY,EAAE;AALV,GAxDqB;AA+D7BC,EAAAA,QAAQ,EAAE;AACNnB,IAAAA,QAAQ,EAAE,EADJ;AAEND,IAAAA,UAAU,EAAE;AAFN;AA/DmB,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport { \r\n    View, \r\n    Text, \r\n    TouchableOpacity, \r\n    TextInput,\r\n    Platform,\r\n    StyleSheet ,\r\n    StatusBar,\r\n    Alert\r\n} from 'react-native';\r\nimport * as Animatable from 'react-native-animatable';\r\nimport LinearGradient from 'react-native-linear-gradient';\r\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\r\nimport Feather from 'react-native-vector-icons/Feather';\r\n\r\nimport { useTheme } from 'react-native-paper';\r\n\r\nimport { AuthContext } from '../components/context';\r\n\r\nimport Users from '../model/users';\r\n\r\nconst SignInScreen = ({navigation}) => {\r\n\r\n    // const [data, setData] = React.useState({\r\n    //     username: '',\r\n    //     password: '',\r\n    //     check_textInputChange: false,\r\n    //     secureTextEntry: true,\r\n    //     isValidUser: true,\r\n    //     isValidPassword: true,\r\n    // });\r\n\r\n    // const { colors } = useTheme();\r\n\r\n    // const { signIn } = React.useContext(AuthContext);\r\n\r\n    // const textInputChange = (val) => {\r\n    //     if( val.trim().length >= 4 ) {\r\n    //         setData({\r\n    //             ...data,\r\n    //             username: val,\r\n    //             check_textInputChange: true,\r\n    //             isValidUser: true\r\n    //         });\r\n    //     } else {\r\n    //         setData({\r\n    //             ...data,\r\n    //             username: val,\r\n    //             check_textInputChange: false,\r\n    //             isValidUser: false\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n    // const handlePasswordChange = (val) => {\r\n    //     if( val.trim().length >= 8 ) {\r\n    //         setData({\r\n    //             ...data,\r\n    //             password: val,\r\n    //             isValidPassword: true\r\n    //         });\r\n    //     } else {\r\n    //         setData({\r\n    //             ...data,\r\n    //             password: val,\r\n    //             isValidPassword: false\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n    // const updateSecureTextEntry = () => {\r\n    //     setData({\r\n    //         ...data,\r\n    //         secureTextEntry: !data.secureTextEntry\r\n    //     });\r\n    // }\r\n\r\n    // const handleValidUser = (val) => {\r\n    //     if( val.trim().length >= 4 ) {\r\n    //         setData({\r\n    //             ...data,\r\n    //             isValidUser: true\r\n    //         });\r\n    //     } else {\r\n    //         setData({\r\n    //             ...data,\r\n    //             isValidUser: false\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n    // const loginHandle = (userName, password) => {\r\n\r\n    //     const foundUser = Users.filter( item => {\r\n    //         return userName == item.username && password == item.password;\r\n    //     } );\r\n\r\n    //     if ( data.username.length == 0 || data.password.length == 0 ) {\r\n    //         Alert.alert('Wrong Input!', 'Username or password field cannot be empty.', [\r\n    //             {text: 'Okay'}\r\n    //         ]);\r\n    //         return;\r\n    //     }\r\n\r\n    //     if ( foundUser.length == 0 ) {\r\n    //         Alert.alert('Invalid User!', 'Username or password is incorrect.', [\r\n    //             {text: 'Okay'}\r\n    //         ]);\r\n    //         return;\r\n    //     }\r\n    //     signIn(foundUser);\r\n    // }\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n          Sign In Screen\r\n          {/* <StatusBar backgroundColor='#009387' barStyle=\"light-content\"/>\r\n        <View style={styles.header}>\r\n            <Text style={styles.text_header}>Welcome!</Text>\r\n        </View>\r\n        <Animatable.View \r\n            animation=\"fadeInUpBig\"\r\n            style={[styles.footer, {\r\n                backgroundColor: colors.background\r\n            }]}\r\n        >\r\n            <Text style={[styles.text_footer, {\r\n                color: colors.text\r\n            }]}>Username</Text>\r\n            <View style={styles.action}>\r\n                <FontAwesome \r\n                    name=\"user-o\"\r\n                    color={colors.text}\r\n                    size={20}\r\n                />\r\n                <TextInput \r\n                    placeholder=\"Your Username\"\r\n                    placeholderTextColor=\"#666666\"\r\n                    style={[styles.textInput, {\r\n                        color: colors.text\r\n                    }]}\r\n                    autoCapitalize=\"none\"\r\n                    onChangeText={(val) => textInputChange(val)}\r\n                    onEndEditing={(e)=>handleValidUser(e.nativeEvent.text)}\r\n                />\r\n                {data.check_textInputChange ? \r\n                <Animatable.View\r\n                    animation=\"bounceIn\"\r\n                >\r\n                    <Feather \r\n                        name=\"check-circle\"\r\n                        color=\"green\"\r\n                        size={20}\r\n                    />\r\n                </Animatable.View>\r\n                : null}\r\n            </View>\r\n            { data.isValidUser ? null : \r\n            <Animatable.View animation=\"fadeInLeft\" duration={500}>\r\n            <Text style={styles.errorMsg}>Username must be 4 characters long.</Text>\r\n            </Animatable.View>\r\n            }\r\n            \r\n\r\n            <Text style={[styles.text_footer, {\r\n                color: colors.text,\r\n                marginTop: 35\r\n            }]}>Password</Text>\r\n            <View style={styles.action}>\r\n                <Feather \r\n                    name=\"lock\"\r\n                    color={colors.text}\r\n                    size={20}\r\n                />\r\n                <TextInput \r\n                    placeholder=\"Your Password\"\r\n                    placeholderTextColor=\"#666666\"\r\n                    secureTextEntry={data.secureTextEntry ? true : false}\r\n                    style={[styles.textInput, {\r\n                        color: colors.text\r\n                    }]}\r\n                    autoCapitalize=\"none\"\r\n                    onChangeText={(val) => handlePasswordChange(val)}\r\n                />\r\n                <TouchableOpacity\r\n                    onPress={updateSecureTextEntry}\r\n                >\r\n                    {data.secureTextEntry ? \r\n                    <Feather \r\n                        name=\"eye-off\"\r\n                        color=\"grey\"\r\n                        size={20}\r\n                    />\r\n                    :\r\n                    <Feather \r\n                        name=\"eye\"\r\n                        color=\"grey\"\r\n                        size={20}\r\n                    />\r\n                    }\r\n                </TouchableOpacity>\r\n            </View>\r\n            { data.isValidPassword ? null : \r\n            <Animatable.View animation=\"fadeInLeft\" duration={500}>\r\n            <Text style={styles.errorMsg}>Password must be 8 characters long.</Text>\r\n            </Animatable.View>\r\n            }\r\n            \r\n\r\n            <TouchableOpacity>\r\n                <Text style={{color: '#009387', marginTop:15}}>Forgot password?</Text>\r\n            </TouchableOpacity>\r\n            <View style={styles.button}>\r\n                <TouchableOpacity\r\n                    style={styles.signIn}\r\n                    onPress={() => {loginHandle( data.username, data.password )}}\r\n                >\r\n                <LinearGradient\r\n                    colors={['#08d4c4', '#01ab9d']}\r\n                    style={styles.signIn}\r\n                >\r\n                    <Text style={[styles.textSign, {\r\n                        color:'#fff'\r\n                    }]}>Sign In</Text>\r\n                </LinearGradient>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                    onPress={() => navigation.navigate('SignUpScreen')}\r\n                    style={[styles.signIn, {\r\n                        borderColor: '#009387',\r\n                        borderWidth: 1,\r\n                        marginTop: 15\r\n                    }]}\r\n                >\r\n                    <Text style={[styles.textSign, {\r\n                        color: '#009387'\r\n                    }]}>Sign Up</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </Animatable.View> */}\r\n      </View>\r\n    );\r\n};\r\n\r\nexport default SignInScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1, \r\n      backgroundColor: '#009387'\r\n    },\r\n    header: {\r\n        flex: 1,\r\n        justifyContent: 'flex-end',\r\n        paddingHorizontal: 20,\r\n        paddingBottom: 50\r\n    },\r\n    footer: {\r\n        flex: 3,\r\n        backgroundColor: '#fff',\r\n        borderTopLeftRadius: 30,\r\n        borderTopRightRadius: 30,\r\n        paddingHorizontal: 20,\r\n        paddingVertical: 30\r\n    },\r\n    text_header: {\r\n        color: '#fff',\r\n        fontWeight: 'bold',\r\n        fontSize: 30\r\n    },\r\n    text_footer: {\r\n        color: '#05375a',\r\n        fontSize: 18\r\n    },\r\n    action: {\r\n        flexDirection: 'row',\r\n        marginTop: 10,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#f2f2f2',\r\n        paddingBottom: 5\r\n    },\r\n    actionError: {\r\n        flexDirection: 'row',\r\n        marginTop: 10,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#FF0000',\r\n        paddingBottom: 5\r\n    },\r\n    textInput: {\r\n        flex: 1,\r\n        marginTop: Platform.OS === 'ios' ? 0 : -12,\r\n        paddingLeft: 10,\r\n        color: '#05375a',\r\n    },\r\n    errorMsg: {\r\n        color: '#FF0000',\r\n        fontSize: 14,\r\n    },\r\n    button: {\r\n        alignItems: 'center',\r\n        marginTop: 50\r\n    },\r\n    signIn: {\r\n        width: '100%',\r\n        height: 50,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: 10\r\n    },\r\n    textSign: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold'\r\n    }\r\n  });\r\n"]},"metadata":{},"sourceType":"module"}