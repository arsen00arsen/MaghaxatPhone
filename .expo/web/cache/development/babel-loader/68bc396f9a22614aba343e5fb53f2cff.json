{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { getData, getName, overwrite } from 'country-list';\nimport Flags from 'react-native-flags';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction CountrySelectDropdown(_ref) {\n  var countrySelect = _ref.countrySelect,\n      _ref$toggleParentScro = _ref.toggleParentScroll,\n      toggleParentScroll = _ref$toggleParentScro === void 0 ? function () {\n    return null;\n  } : _ref$toggleParentScro,\n      error = _ref.error,\n      _ref$overwrites = _ref.overwrites,\n      overwrites = _ref$overwrites === void 0 ? [{\n    code: 'TW',\n    name: 'Taiwan'\n  }] : _ref$overwrites,\n      _ref$defaultCountry = _ref.defaultCountry,\n      defaultCountry = _ref$defaultCountry === void 0 ? \"\" : _ref$defaultCountry,\n      _ref$dropdownOffsetX = _ref.dropdownOffsetX,\n      dropdownOffsetX = _ref$dropdownOffsetX === void 0 ? 0 : _ref$dropdownOffsetX,\n      _ref$dropdownOffsetY = _ref.dropdownOffsetY,\n      dropdownOffsetY = _ref$dropdownOffsetY === void 0 ? 0 : _ref$dropdownOffsetY,\n      fontFamily = _ref.fontFamily,\n      _ref$fontSizeOffset = _ref.fontSizeOffset,\n      fontSizeOffset = _ref$fontSizeOffset === void 0 ? 0 : _ref$fontSizeOffset,\n      _ref$textColor = _ref.textColor,\n      textColor = _ref$textColor === void 0 ? \"black\" : _ref$textColor;\n  overwrite(overwrites);\n  var allCountryList = getData();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState(defaultCountry),\n      _useState4 = _slicedToArray(_useState3, 2),\n      countryCode = _useState4[0],\n      setCountryCode = _useState4[1];\n\n  var _useState5 = useState(getName(defaultCountry)),\n      _useState6 = _slicedToArray(_useState5, 2),\n      country = _useState6[0],\n      setCountry = _useState6[1];\n\n  var _useState7 = useState(getData()),\n      _useState8 = _slicedToArray(_useState7, 2),\n      countryList = _useState8[0],\n      setCountryList = _useState8[1];\n\n  var onCountrySelect = function onCountrySelect(_ref2) {\n    var name = _ref2.name,\n        code = _ref2.code;\n    setModalVisible(false);\n    setCountryCode(code);\n    setCountry(name);\n    countrySelect(code);\n    toggleParentScroll();\n  };\n\n  var filterCountryList = function filterCountryList(searchText) {\n    var newList = allCountryList.filter(function (_ref3) {\n      var name = _ref3.name;\n      return name.toLowerCase().includes(searchText.toLowerCase());\n    });\n    setModalVisible(true);\n    setCountryList(newList);\n  };\n\n  var clearCountryField = function clearCountryField() {\n    countrySelect(\"\");\n    setCountryCode(\"\");\n    setCountry(\"\");\n  };\n\n  var renderItem = function renderItem(item) {\n    return _jsxs(TouchableOpacity, {\n      style: {\n        flexDirection: \"row\",\n        backgroundColor: \"#f3f3f3\",\n        padding: 15,\n        paddingLeft: 5,\n        alignItems: \"center\",\n        borderWidth: 1,\n        borderBottomWidth: 0,\n        borderColor: \"rgba(0,0,0,0.2)\",\n        zIndex: 2\n      },\n      onPress: function onPress() {\n        onCountrySelect(item);\n      },\n      children: [_jsx(Flags, {\n        code: item.code,\n        type: \"flat\",\n        size: 24\n      }), _jsx(Text, {\n        style: {\n          fontFamily: fontFamily,\n          fontWeight: \"500\",\n          color: textColor,\n          paddingHorizontal: 20\n        },\n        children: item.name\n      })]\n    }, item.code);\n  };\n\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      width: \"100%\"\n    },\n    children: [countryCode !== \"\" && _jsx(View, {\n      style: {\n        marginBottom: 20,\n        borderBottomColor: \"rgba(0, 0, 0, 0.2)\",\n        borderBottomWidth: 1,\n        color: textColor,\n        fontSize: 14 + fontSizeOffset,\n        fontFamily: fontFamily\n      },\n      children: _jsx(View, {\n        style: {\n          flexDirection: \"row\",\n          alignItems: \"center\"\n        },\n        children: _jsxs(TouchableOpacity, {\n          onPress: clearCountryField,\n          style: {\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            padding: 3,\n            margin: 2,\n            maxWidth: \"100%\"\n          },\n          children: [_jsx(Flags, {\n            code: countryCode,\n            type: \"flat\",\n            size: 24,\n            style: {\n              marginHorizontal: 2\n            }\n          }), _jsx(Text, {\n            style: {\n              flex: 1,\n              paddingHorizontal: 10,\n              color: textColor,\n              fontSize: 14 + fontSizeOffset,\n              fontFamily: fontFamily\n            },\n            children: country\n          }), _jsx(Text, {\n            style: {\n              paddingHorizontal: 10,\n              alignSelf: \"flex-end\",\n              transform: [{\n                rotate: '45deg'\n              }],\n              color: \"#FC5949\",\n              fontSize: 20 + fontSizeOffset\n            },\n            children: \"+\"\n          })]\n        })\n      })\n    }), countryCode === \"\" && _jsx(TextInput, {\n      style: error ? {\n        minHeight: 35,\n        borderBottomColor: \"#FF7070\",\n        borderBottomWidth: 1,\n        color: textColor,\n        fontSize: 14 + fontSizeOffset,\n        fontFamily: fontFamily\n      } : {\n        minHeight: 35,\n        borderBottomColor: \"rgba(0, 0, 0, 0.2)\",\n        borderBottomWidth: 1,\n        color: textColor,\n        fontSize: 14 + fontSizeOffset,\n        fontFamily: fontFamily\n      },\n      placeholder: \"Select country...\",\n      onChangeText: filterCountryList,\n      onFocus: toggleParentScroll\n    }), error && _jsx(Text, {\n      style: {\n        marginBottom: 20,\n        alignSelf: \"flex-start\",\n        color: \"#FF7070\",\n        fontFamily: fontFamily,\n        fontSize: 14 + fontSizeOffset\n      },\n      children: error\n    }), modalVisible && _jsx(ScrollView, {\n      style: {\n        position: \"absolute\",\n        maxHeight: 220,\n        marginTop: 35 + dropdownOffsetY,\n        marginLeft: dropdownOffsetX,\n        width: \"100%\",\n        backgroundColor: \"white\",\n        elevation: 5\n      },\n      children: countryList.map(function (country) {\n        return renderItem(country);\n      })\n    })]\n  });\n}\n\n;\nexport default CountrySelectDropdown;","map":{"version":3,"sources":["C:/Users/Serious/Desktop/Native/Новая папка (2)/my-app/node_modules/react-native-searchable-country-dropdown/src/CountrySelectDropdown.js"],"names":["React","useState","getData","getName","overwrite","Flags","CountrySelectDropdown","countrySelect","toggleParentScroll","error","overwrites","code","name","defaultCountry","dropdownOffsetX","dropdownOffsetY","fontFamily","fontSizeOffset","textColor","allCountryList","modalVisible","setModalVisible","countryCode","setCountryCode","country","setCountry","countryList","setCountryList","onCountrySelect","filterCountryList","searchText","newList","filter","toLowerCase","includes","clearCountryField","renderItem","item","flexDirection","backgroundColor","padding","paddingLeft","alignItems","borderWidth","borderBottomWidth","borderColor","zIndex","fontWeight","color","paddingHorizontal","flex","width","marginBottom","borderBottomColor","fontSize","margin","maxWidth","marginHorizontal","alignSelf","transform","rotate","minHeight","position","maxHeight","marginTop","marginLeft","elevation","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n  ScrollView,\r\n  TextInput,\r\n} from \"react-native\";\r\n\r\nimport {getData, getName, overwrite} from 'country-list'\r\nimport Flags from 'react-native-flags'\r\n\r\nfunction CountrySelectDropdown ({\r\n    countrySelect, \r\n    toggleParentScroll = () => null, \r\n    error, \r\n    overwrites = [{code: 'TW', name: 'Taiwan'}], \r\n    defaultCountry = \"\", \r\n    dropdownOffsetX = 0, \r\n    dropdownOffsetY = 0, \r\n    fontFamily,\r\n    fontSizeOffset = 0,\r\n    textColor = \"black\"}) \r\n{\r\n\r\n  overwrite(overwrites)\r\n\r\n  const allCountryList = getData()\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [countryCode, setCountryCode] = useState(defaultCountry);\r\n  const [country, setCountry] = useState(getName(defaultCountry));\r\n  const [countryList, setCountryList] = useState(getData())\r\n\r\n  const onCountrySelect = ({name, code}) => {\r\n    setModalVisible(false)\r\n    setCountryCode(code)\r\n    setCountry(name)\r\n    countrySelect(code)\r\n    toggleParentScroll()\r\n  }\r\n\r\n  const filterCountryList = (searchText) => {\r\n    const newList = allCountryList.filter(({name}) => name.toLowerCase().includes(searchText.toLowerCase()))\r\n    setModalVisible(true)\r\n    setCountryList(newList)\r\n  }\r\n\r\n  const clearCountryField = () => {\r\n    countrySelect(\"\")\r\n    setCountryCode(\"\")\r\n    setCountry(\"\")\r\n  }\r\n  const renderItem = (item) => {\r\n    return (\r\n      <TouchableOpacity key={item.code}\r\n        style={{\r\n        flexDirection: \"row\",\r\n        backgroundColor: \"#f3f3f3\",\r\n        padding: 15,\r\n        paddingLeft: 5,\r\n        alignItems: \"center\",\r\n        borderWidth: 1,\r\n        borderBottomWidth: 0,\r\n        borderColor: \"rgba(0,0,0,0.2)\",\r\n        zIndex: 2,}}\r\n        onPress={() => {onCountrySelect(item)}}\r\n      >\r\n        <Flags code={item.code} type={\"flat\"} size={24} />\r\n        <Text style={{\r\n          fontFamily: fontFamily,\r\n          fontWeight: \"500\",\r\n          color: textColor,\r\n          paddingHorizontal: 20,}}>{item.name}</Text>\r\n\r\n      </TouchableOpacity>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <View style={{flex:1, width: \"100%\"}}>      \r\n      {countryCode !== \"\" &&\r\n        <View style={{\r\n          marginBottom: 20,\r\n          borderBottomColor: \"rgba(0, 0, 0, 0.2)\",\r\n          borderBottomWidth: 1,\r\n          color: textColor,\r\n          fontSize: 14 + fontSizeOffset,\r\n          fontFamily: fontFamily\r\n        }}>\r\n          <View style={{flexDirection: \"row\", alignItems: \"center\"}}>\r\n            <TouchableOpacity \r\n              onPress={clearCountryField} \r\n              style={{\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                padding:3,\r\n                margin: 2,\r\n                maxWidth: \"100%\",}}\r\n            >\r\n              <Flags code={countryCode} type={\"flat\"} size={24} style={{marginHorizontal: 2}} />\r\n\r\n              <Text style={{\r\n                flex: 1,\r\n                paddingHorizontal: 10,\r\n                color: textColor,\r\n                fontSize: 14 + fontSizeOffset,\r\n                fontFamily: fontFamily\r\n              }}>{country}</Text>\r\n\r\n              <Text style={{\r\n                paddingHorizontal: 10,\r\n                alignSelf: \"flex-end\",\r\n                transform: [{ rotate: '45deg' }], \r\n                color: \"#FC5949\", \r\n                fontSize: 20 + fontSizeOffset\r\n              }}>+</Text>\r\n\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      }\r\n\r\n      {countryCode === \"\" &&\r\n        <TextInput style={error ? { \r\n          minHeight: 35,\r\n          borderBottomColor: \"#FF7070\",\r\n          borderBottomWidth: 1,\r\n          color: textColor,\r\n          fontSize: 14 + fontSizeOffset,\r\n          fontFamily: fontFamily,} : {\r\n          minHeight: 35,\r\n          borderBottomColor: \"rgba(0, 0, 0, 0.2)\",\r\n          borderBottomWidth: 1,\r\n          color: textColor,\r\n          fontSize: 14 + fontSizeOffset,\r\n          fontFamily: fontFamily}\r\n        } \r\n          placeholder={\"Select country...\"} \r\n          onChangeText={filterCountryList} \r\n          onFocus={toggleParentScroll}/>\r\n      }\r\n\r\n      {error &&\r\n        <Text style={{\r\n          marginBottom: 20,\r\n          alignSelf: \"flex-start\",\r\n          color: \"#FF7070\",\r\n          fontFamily: fontFamily,\r\n          fontSize: 14 + fontSizeOffset}}>{error}</Text>\r\n      }\r\n\r\n      {modalVisible &&\r\n      <ScrollView style={{\r\n        position: \"absolute\",\r\n        maxHeight: 220,\r\n        marginTop: 35 + dropdownOffsetY,\r\n        marginLeft: dropdownOffsetX,\r\n        width: \"100%\",\r\n        backgroundColor: \"white\",\r\n        elevation: 5,}}>\r\n        {countryList.map((country) => renderItem(country))}\r\n      </ScrollView>}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default CountrySelectDropdown;\r\n"]},"metadata":{},"sourceType":"module"}