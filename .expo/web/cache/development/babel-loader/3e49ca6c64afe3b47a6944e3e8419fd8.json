{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function BirthDate() {\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      mydate = _useState2[0],\n      setDate = _useState2[1];\n\n  var _useState3 = useState('date'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      displaymode = _useState4[0],\n      setMode = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isDisplayDate = _useState6[0],\n      setShow = _useState6[1];\n\n  var changeSelectedDate = function changeSelectedDate(event, selectedDate) {\n    var currentDate = selectedDate || mydate;\n    setDate(currentDate);\n  };\n\n  var showMode = function showMode(currentMode) {\n    setShow(true);\n    setMode(currentMode);\n  };\n\n  var displayDatepicker = function displayDatepicker() {\n    showMode('date');\n  };\n\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(View, {\n      children: _jsx(Button, {\n        onPress: displayDatepicker,\n        title: \"Show date picker!\"\n      })\n    }), isDisplayDate && _jsx(DateTimePicker, {\n      testID: \"dateTimePicker\",\n      value: mydate,\n      mode: displaymode,\n      is24Hour: true,\n      display: \"default\",\n      onChange: changeSelectedDate\n    })]\n  });\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Serious/Desktop/Native/Новая папка (2)/my-app/components/BirthDate.js"],"names":["React","useState","DateTimePicker","BirthDate","Date","mydate","setDate","displaymode","setMode","isDisplayDate","setShow","changeSelectedDate","event","selectedDate","currentDate","showMode","currentMode","displayDatepicker","styles","container","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;AAEA,OAAOC,cAAP,MAA2B,wCAA3B;;;AAGA,eAAe,SAASC,SAAT,GAAqB;AACjC,kBAA0BF,QAAQ,CAAC,IAAIG,IAAJ,EAAD,CAAlC;AAAA;AAAA,MAAOC,MAAP;AAAA,MAAeC,OAAf;;AACA,mBAA+BL,QAAQ,CAAC,MAAD,CAAvC;AAAA;AAAA,MAAOM,WAAP;AAAA,MAAoBC,OAApB;;AACA,mBAAiCP,QAAQ,CAAC,KAAD,CAAzC;AAAA;AAAA,MAAOQ,aAAP;AAAA,MAAsBC,OAAtB;;AACA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAQC,YAAR,EAAyB;AACpD,QAAMC,WAAW,GAAGD,YAAY,IAAIR,MAApC;AACAC,IAAAA,OAAO,CAACQ,WAAD,CAAP;AACF,GAHE;;AAIH,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,WAAD,EAAiB;AAC/BN,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAF,IAAAA,OAAO,CAACQ,WAAD,CAAP;AACF,GAHD;;AAIA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC7BF,IAAAA,QAAQ,CAAC,MAAD,CAAR;AACF,GAFD;;AAGA,SACG,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEG,MAAM,CAACC,SAA5B;AAAA,eACG,KAAC,IAAD;AAAA,gBACG,KAAC,MAAD;AAAQ,QAAA,OAAO,EAAEF,iBAAjB;AAAoC,QAAA,KAAK,EAAC;AAA1C;AADH,MADH,EAIaR,aAAa,IACX,KAAC,cAAD;AACG,MAAA,MAAM,EAAC,gBADV;AAEG,MAAA,KAAK,EAAEJ,MAFV;AAGG,MAAA,IAAI,EAAEE,WAHT;AAIG,MAAA,QAAQ,EAAE,IAJb;AAKG,MAAA,OAAO,EAAC,SALX;AAMG,MAAA,QAAQ,EAAEI;AANb,MALf;AAAA,IADH;AAiBC;AAAA;AACD,IAAMO,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC9BF,EAAAA,SAAS,EAAE;AACRG,IAAAA,IAAI,EAAE,CADE;AAERC,IAAAA,UAAU,EAAE,QAFJ;AAGRC,IAAAA,cAAc,EAAE;AAHR;AADmB,CAAlB,CAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport {View, Button, Platform, SafeAreaView , StyleSheet} from 'react-native';\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\n\r\n\r\nexport default function BirthDate() {\r\n   const [mydate, setDate] = useState(new Date());\r\n   const [displaymode, setMode] = useState('date');\r\n   const [isDisplayDate, setShow] = useState(false);\r\n   const changeSelectedDate = (event, selectedDate) => {\r\n   const currentDate = selectedDate || mydate;\r\n   setDate(currentDate);\r\n};\r\nconst showMode = (currentMode) => {\r\n   setShow(true);\r\n   setMode(currentMode);\r\n};\r\nconst displayDatepicker = () => {\r\n   showMode('date');\r\n};\r\nreturn (\r\n   <SafeAreaView style={styles.container}>\r\n      <View>\r\n         <Button onPress={displayDatepicker} title=\"Show date picker!\" />\r\n            </View>\r\n               {isDisplayDate && (\r\n                  <DateTimePicker\r\n                     testID=\"dateTimePicker\"\r\n                     value={mydate}\r\n                     mode={displaymode}\r\n                     is24Hour={true}\r\n                     display=\"default\"\r\n                     onChange={changeSelectedDate}\r\n            />\r\n         )}\r\n      </SafeAreaView>\r\n   );\r\n};\r\nconst styles = StyleSheet.create({\r\n   container: {\r\n      flex: 1,\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\"\r\n   },\r\n});"]},"metadata":{},"sourceType":"module"}