{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CountrySelect = function (_Component) {\n  _inherits(CountrySelect, _Component);\n\n  var _super = _createSuper(CountrySelect);\n\n  function CountrySelect(props) {\n    var _this;\n\n    _classCallCheck(this, CountrySelect);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      country: '',\n      region: ''\n    };\n    return _this;\n  }\n\n  _createClass(CountrySelect, [{\n    key: \"selectCountry\",\n    value: function selectCountry(val) {\n      this.setState({\n        country: val\n      });\n    }\n  }, {\n    key: \"selectRegion\",\n    value: function selectRegion(val) {\n      this.setState({\n        region: val\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          country = _this$state.country,\n          region = _this$state.region;\n      return _jsxs(\"div\", {\n        children: [_jsx(CountryDropdown, {\n          value: country,\n          onChange: function onChange(val) {\n            return _this2.selectCountry(val);\n          }\n        }), _jsx(RegionDropdown, {\n          country: country,\n          value: region,\n          onChange: function onChange(val) {\n            return _this2.selectRegion(val);\n          }\n        })]\n      });\n    }\n  }]);\n\n  return CountrySelect;\n}(Component);\n\nexport default CountrySelect;","map":{"version":3,"sources":["C:/Users/Serious/Desktop/Native/Новая папка (2)/my-app/components/CountrySelect.js"],"names":["React","Component","CountryDropdown","RegionDropdown","CountryRegionData","CountrySelect","props","state","country","region","val","setState","selectCountry","selectRegion"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAIA,SAASC,eAAT,EAA0BC,cAA1B,EAA0CC,iBAA1C,QAAmE,+BAAnE;;;;IAGMC,a;;;;;AACJ,yBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,MAAM,EAAE;AAAvB,KAAb;AAFkB;AAGnB;;;;WAED,uBAAeC,GAAf,EAAoB;AAClB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAEE;AAAX,OAAd;AACD;;;WAED,sBAAcA,GAAd,EAAmB;AACjB,WAAKC,QAAL,CAAc;AAAEF,QAAAA,MAAM,EAAEC;AAAV,OAAd;AACD;;;WAED,kBAAU;AAAA;;AACR,wBAA4B,KAAKH,KAAjC;AAAA,UAAQC,OAAR,eAAQA,OAAR;AAAA,UAAiBC,MAAjB,eAAiBA,MAAjB;AACA,aACE;AAAA,mBACE,KAAC,eAAD;AACE,UAAA,KAAK,EAAED,OADT;AAEE,UAAA,QAAQ,EAAE,kBAACE,GAAD;AAAA,mBAAS,MAAI,CAACE,aAAL,CAAmBF,GAAnB,CAAT;AAAA;AAFZ,UADF,EAIE,KAAC,cAAD;AACE,UAAA,OAAO,EAAEF,OADX;AAEE,UAAA,KAAK,EAAEC,MAFT;AAGE,UAAA,QAAQ,EAAE,kBAACC,GAAD;AAAA,mBAAS,MAAI,CAACG,YAAL,CAAkBH,GAAlB,CAAT;AAAA;AAHZ,UAJF;AAAA,QADF;AAWD;;;;EA3ByBT,S;;AA8B5B,eAAeI,aAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\n// note that you can also export the source data via CountryRegionData. It's in a deliberately concise format to \r\n// keep file size down\r\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\r\n\r\n\r\nclass CountrySelect extends Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = { country: '', region: '' };\r\n  }\r\n\r\n  selectCountry (val) {\r\n    this.setState({ country: val });\r\n  }\r\n\r\n  selectRegion (val) {\r\n    this.setState({ region: val });\r\n  }\r\n\r\n  render () {\r\n    const { country, region } = this.state;\r\n    return (\r\n      <div>\r\n        <CountryDropdown\r\n          value={country}\r\n          onChange={(val) => this.selectCountry(val)} />\r\n        <RegionDropdown\r\n          country={country}\r\n          value={region}\r\n          onChange={(val) => this.selectRegion(val)} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CountrySelect"]},"metadata":{},"sourceType":"module"}