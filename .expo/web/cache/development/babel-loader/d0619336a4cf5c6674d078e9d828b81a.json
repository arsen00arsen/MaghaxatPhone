{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport CountryPicker from 'react-native-country-picker-modal';\nimport { CountryCode, Country } from \"./src/types\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({});\nexport default function CountrySelect() {\n  var _useState = useState('FR'),\n      _useState2 = _slicedToArray(_useState, 2),\n      countryCode = _useState2[0],\n      setCountryCode = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      country = _useState4[0],\n      setCountry = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      withCountryNameButton = _useState6[0],\n      setWithCountryNameButton = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      withFlag = _useState8[0],\n      setWithFlag = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      withEmoji = _useState10[0],\n      setWithEmoji = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      withFilter = _useState12[0],\n      setWithFilter = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      withAlphaFilter = _useState14[0],\n      setWithAlphaFilter = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      withCallingCode = _useState16[0],\n      setWithCallingCode = _useState16[1];\n\n  var onSelect = function onSelect() {\n    setCountryCode(country.cca2);\n    setCountry(country);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.welcome,\n      children: \"Welcome to Country Picker !\"\n    }), _jsx(Option, {\n      title: \"With country name on button\",\n      value: withCountryNameButton,\n      onValueChange: setWithCountryNameButton\n    }), _jsx(Option, {\n      title: \"With flag\",\n      value: withFlag,\n      onValueChange: setWithFlag\n    }), _jsx(Option, {\n      title: \"With emoji\",\n      value: withEmoji,\n      onValueChange: setWithEmoji\n    }), _jsx(Option, {\n      title: \"With filter\",\n      value: withFilter,\n      onValueChange: setWithFilter\n    }), _jsx(Option, {\n      title: \"With calling code\",\n      value: withCallingCode,\n      onValueChange: setWithCallingCode\n    }), _jsx(Option, {\n      title: \"With alpha filter code\",\n      value: withAlphaFilter,\n      onValueChange: setWithAlphaFilter\n    }), _jsx(CountryPicker, {\n      countryCode: countryCode,\n      withFilter: withFilter,\n      withFlag: withFlag,\n      withCountryNameButton: withCountryNameButton,\n      withAlphaFilter: withAlphaFilter,\n      withCallingCode: withCallingCode,\n      withEmoji: withEmoji,\n      onSelect: onSelect,\n      visible: true\n    }), _jsx(Text, {\n      style: styles.instructions,\n      children: \"Press on the flag to open modal\"\n    }), country !== null && _jsx(Text, {\n      style: styles.data,\n      children: JSON.stringify(country, null, 2)\n    })]\n  });\n}","map":{"version":3,"sources":["C:/Users/Serious/Desktop/Native/Новая папка (2)/my-app/components/CountrySelect.js"],"names":["React","useState","CountryPicker","CountryCode","Country","styles","StyleSheet","create","CountrySelect","countryCode","setCountryCode","country","setCountry","withCountryNameButton","setWithCountryNameButton","withFlag","setWithFlag","withEmoji","setWithEmoji","withFilter","setWithFilter","withAlphaFilter","setWithAlphaFilter","withCallingCode","setWithCallingCode","onSelect","cca2","container","welcome","instructions","data","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { View, Text, StyleSheet, PixelRatio, Switch } from 'react-native'\r\nimport CountryPicker from 'react-native-country-picker-modal'\r\nimport { CountryCode, Country } from './src/types'\r\n\r\nconst styles = StyleSheet.create({\r\n  // ...\r\n})\r\n\r\nexport default function CountrySelect() {\r\n  const [countryCode, setCountryCode] = useState('FR')\r\n  const [country, setCountry] = useState(null)\r\n  const [withCountryNameButton, setWithCountryNameButton] = useState(\r\n    false,\r\n  )\r\n  const [withFlag, setWithFlag] = useState(true)\r\n  const [withEmoji, setWithEmoji] = useState(true)\r\n  const [withFilter, setWithFilter] = useState(true)\r\n  const [withAlphaFilter, setWithAlphaFilter] = useState(false)\r\n  const [withCallingCode, setWithCallingCode] = useState(false)\r\n  const onSelect = () => {\r\n    setCountryCode(country.cca2)\r\n    setCountry(country)\r\n  }\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.welcome}>Welcome to Country Picker !</Text>\r\n      <Option\r\n        title='With country name on button'\r\n        value={withCountryNameButton}\r\n        onValueChange={setWithCountryNameButton}\r\n      />\r\n      <Option title='With flag' value={withFlag} onValueChange={setWithFlag} />\r\n      <Option\r\n        title='With emoji'\r\n        value={withEmoji}\r\n        onValueChange={setWithEmoji}\r\n      />\r\n      <Option\r\n        title='With filter'\r\n        value={withFilter}\r\n        onValueChange={setWithFilter}\r\n      />\r\n      <Option\r\n        title='With calling code'\r\n        value={withCallingCode}\r\n        onValueChange={setWithCallingCode}\r\n      />\r\n      <Option\r\n        title='With alpha filter code'\r\n        value={withAlphaFilter}\r\n        onValueChange={setWithAlphaFilter}\r\n      />\r\n      <CountryPicker\r\n        {...{\r\n          countryCode,\r\n          withFilter,\r\n          withFlag,\r\n          withCountryNameButton,\r\n          withAlphaFilter,\r\n          withCallingCode,\r\n          withEmoji,\r\n          onSelect,\r\n        }}\r\n        visible\r\n      />\r\n      <Text style={styles.instructions}>Press on the flag to open modal</Text>\r\n      {country !== null && (\r\n        <Text style={styles.data}>{JSON.stringify(country, null, 2)}</Text>\r\n      )}\r\n    </View>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}