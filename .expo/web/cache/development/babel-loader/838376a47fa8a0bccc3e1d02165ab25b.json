{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport * as Animatable from 'react-native-animatable';\nimport { AntDesign } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SignUpScreen = function SignUpScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(LinearGradient, {\n    colors: [\"#D6AB6F\", '#D6AB6F', '#B8B8B8', '#B8B8B8'],\n    style: styles.linearGradient,\n    children: [_jsx(StatusBar, {\n      backgroundColor: \"#009387\",\n      barStyle: \"light-content\"\n    }), _jsxs(View, {\n      style: styles.content,\n      children: [_jsx(Animatable.Image, {\n        animation: \"fadeInUpBig\",\n        duraton: \"1500\",\n        source: require(\"../assets/welcome.png\"),\n        style: styles.logo,\n        resizeMode: \"stretch\"\n      }), _jsxs(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return navigation.navigate('SignUpScreen');\n        },\n        children: [_jsx(View, {}), _jsx(AntDesign, {\n          name: \"arrowright\",\n          size: 20,\n          color: \"white\",\n          style: styles.arrowIcon\n        })]\n      })]\n    })]\n  });\n};\n\nexport default SignUpScreen;\nvar styles = StyleSheet.create({\n  linearGradient: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  content: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    height: \"70%\"\n  },\n  logo: {\n    width: 237,\n    height: 57\n  },\n  text: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  button: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: 'flex-start',\n    marginTop: 30,\n    borderRadius: 50,\n    borderColor: \"#FFFFFF\",\n    borderWidth: 1,\n    width: 237,\n    height: 57,\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  arrowIcon: {\n    marginRight: 20\n  },\n  textSign: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontWeight: 400,\n    fontSize: 18,\n    lineHeight: 21\n  },\n  signIn: {\n    width: '100%',\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/Serious/Desktop/Native/Новая папка (2)/my-app/screens/SignUpScreen.js"],"names":["React","LinearGradient","Animatable","AntDesign","SignUpScreen","navigation","styles","linearGradient","content","require","logo","button","navigate","arrowIcon","StyleSheet","create","flex","justifyContent","display","flexDirection","alignItems","height","width","text","color","fontSize","fontWeight","marginTop","borderRadius","borderColor","borderWidth","marginRight","textSign","lineHeight","signIn"],"mappings":"AAkUA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;AAEA,SAASC,cAAT,QAA+B,sBAA/B;AACA,OAAO,KAAKC,UAAZ,MAA4B,yBAA5B;AACA,SAASC,SAAT,QAA0B,oBAA1B;;;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;AAEnC,SACI,MAAC,cAAD;AACA,IAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CADR;AAEA,IAAA,KAAK,EAAEC,MAAM,CAACC,cAFd;AAAA,eAIA,KAAC,SAAD;AAAW,MAAA,eAAe,EAAC,SAA3B;AAAqC,MAAA,QAAQ,EAAC;AAA9C,MAJA,EAMA,MAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,OAApB;AAAA,iBAEI,KAAC,UAAD,CAAY,KAAZ;AACI,QAAA,SAAS,EAAC,aADd;AAEI,QAAA,OAAO,EAAC,MAFZ;AAGI,QAAA,MAAM,EAAEC,OAAO,yBAHnB;AAII,QAAA,KAAK,EAAEH,MAAM,CAACI,IAJlB;AAKI,QAAA,UAAU,EAAC;AALf,QAFJ,EASI,MAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEJ,MAAM,CAACK,MAAhC;AAAwC,QAAA,OAAO,EAAE;AAAA,iBAAMN,UAAU,CAACO,QAAX,CAAoB,cAApB,CAAN;AAAA,SAAjD;AAAA,mBACI,KAAC,IAAD,KADJ,EAGI,KAAC,SAAD;AAAW,UAAA,IAAI,EAAC,YAAhB;AAA6B,UAAA,IAAI,EAAE,EAAnC;AAAuC,UAAA,KAAK,EAAC,OAA7C;AAAqD,UAAA,KAAK,EAAEN,MAAM,CAACO;AAAnE,UAHJ;AAAA,QATJ;AAAA,MANA;AAAA,IADJ;AA0BH,CA5BD;;AA8BC,eAAeT,YAAf;AAEA,IAAME,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAE9BR,EAAAA,cAAc,EAAE;AACZS,IAAAA,IAAI,EAAE,CADM;AAEZC,IAAAA,cAAc,EAAE;AAFJ,GAFc;AAM9BT,EAAAA,OAAO,EAAE;AACLU,IAAAA,OAAO,EAAE,MADJ;AAELC,IAAAA,aAAa,EAAE,QAFV;AAGLC,IAAAA,UAAU,EAAE,QAHP;AAILH,IAAAA,cAAc,EAAE,eAJX;AAKLI,IAAAA,MAAM,EAAE;AALH,GANqB;AAa9BX,EAAAA,IAAI,EAAE;AACFY,IAAAA,KAAK,EAAE,GADL;AAEFD,IAAAA,MAAM,EAAE;AAFN,GAbwB;AAiB9BE,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,OADL;AAEFC,IAAAA,QAAQ,EAAE,EAFR;AAGFC,IAAAA,UAAU,EAAE;AAHV,GAjBwB;AAsB9Bf,EAAAA,MAAM,EAAE;AACJO,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,KAFX;AAGJC,IAAAA,UAAU,EAAE,YAHR;AAIJO,IAAAA,SAAS,EAAE,EAJP;AAKJC,IAAAA,YAAY,EAAE,EALV;AAMJC,IAAAA,WAAW,EAAE,SANT;AAOJC,IAAAA,WAAW,EAAE,CAPT;AAQJR,IAAAA,KAAK,EAAE,GARH;AASJD,IAAAA,MAAM,EAAE,EATJ;AAUJD,IAAAA,UAAU,EAAE,QAVR;AAWJH,IAAAA,cAAc,EAAE;AAXZ,GAtBsB;AAmC9BJ,EAAAA,SAAS,EAAE;AACPkB,IAAAA,WAAW,EAAE;AADN,GAnCmB;AAsC9BC,EAAAA,QAAQ,EAAE;AACNR,IAAAA,KAAK,EAAE,OADD;AAENE,IAAAA,UAAU,EAAE,MAFN;AAGNA,IAAAA,UAAU,EAAE,GAHN;AAIND,IAAAA,QAAQ,EAAE,EAJJ;AAKNQ,IAAAA,UAAU,EAAE;AALN,GAtCoB;AA6C7BC,EAAAA,MAAM,EAAE;AACLZ,IAAAA,KAAK,EAAE,MADF;AAELD,IAAAA,MAAM,EAAE,EAFH;AAGLJ,IAAAA,cAAc,EAAE,QAHX;AAILG,IAAAA,UAAU,EAAE,QAJP;AAKLQ,IAAAA,YAAY,EAAE;AALT;AA7CqB,CAAlB,CAAf","sourcesContent":["// import React from 'react';\r\n// import { \r\n//     View, \r\n//     Text, \r\n//     TouchableOpacity, \r\n//     TextInput,\r\n//     Platform,\r\n//     StyleSheet ,\r\n//     StatusBar,\r\n//     Alert\r\n// } from 'react-native';\r\n// import * as Animatable from 'react-native-animatable';\r\n// import LinearGradient from 'react-native-linear-gradient';\r\n// import FontAwesome from 'react-native-vector-icons/FontAwesome';\r\n// import Feather from 'react-native-vector-icons/Feather';\r\n\r\n// import { useTheme } from 'react-native-paper';\r\n\r\n// import { AuthContext } from '../components/context';\r\n\r\n// import Users from '../model/users';\r\n\r\n// const SignInScreen = ({navigation}) => {\r\n\r\n//     const [data, setData] = React.useState({\r\n//         username: '',\r\n//         password: '',\r\n//         check_textInputChange: false,\r\n//         secureTextEntry: true,\r\n//         isValidUser: true,\r\n//         isValidPassword: true,\r\n//     });\r\n\r\n//     const { colors } = useTheme();\r\n\r\n//     const { signIn } = React.useContext(AuthContext);\r\n\r\n//     const textInputChange = (val) => {\r\n//         if( val.trim().length >= 4 ) {\r\n//             setData({\r\n//                 ...data,\r\n//                 username: val,\r\n//                 check_textInputChange: true,\r\n//                 isValidUser: true\r\n//             });\r\n//         } else {\r\n//             setData({\r\n//                 ...data,\r\n//                 username: val,\r\n//                 check_textInputChange: false,\r\n//                 isValidUser: false\r\n//             });\r\n//         }\r\n//     }\r\n\r\n//     const handlePasswordChange = (val) => {\r\n//         if( val.trim().length >= 8 ) {\r\n//             setData({\r\n//                 ...data,\r\n//                 password: val,\r\n//                 isValidPassword: true\r\n//             });\r\n//         } else {\r\n//             setData({\r\n//                 ...data,\r\n//                 password: val,\r\n//                 isValidPassword: false\r\n//             });\r\n//         }\r\n//     }\r\n\r\n//     const updateSecureTextEntry = () => {\r\n//         setData({\r\n//             ...data,\r\n//             secureTextEntry: !data.secureTextEntry\r\n//         });\r\n//     }\r\n\r\n//     const handleValidUser = (val) => {\r\n//         if( val.trim().length >= 4 ) {\r\n//             setData({\r\n//                 ...data,\r\n//                 isValidUser: true\r\n//             });\r\n//         } else {\r\n//             setData({\r\n//                 ...data,\r\n//                 isValidUser: false\r\n//             });\r\n//         }\r\n//     }\r\n\r\n//     const loginHandle = (userName, password) => {\r\n\r\n//         const foundUser = Users.filter( item => {\r\n//             return userName == item.username && password == item.password;\r\n//         } );\r\n\r\n//         if ( data.username.length == 0 || data.password.length == 0 ) {\r\n//             Alert.alert('Wrong Input!', 'Username or password field cannot be empty.', [\r\n//                 {text: 'Okay'}\r\n//             ]);\r\n//             return;\r\n//         }\r\n\r\n//         if ( foundUser.length == 0 ) {\r\n//             Alert.alert('Invalid User!', 'Username or password is incorrect.', [\r\n//                 {text: 'Okay'}\r\n//             ]);\r\n//             return;\r\n//         }\r\n//         signIn(foundUser);\r\n//     }\r\n\r\n//     return (\r\n//       <View style={styles.container}>\r\n//           <StatusBar backgroundColor='#009387' barStyle=\"light-content\"/>\r\n//         <View style={styles.header}>\r\n//             <Text style={styles.text_header}>Welcome!</Text>\r\n//         </View>\r\n//         <Animatable.View \r\n//             animation=\"fadeInUpBig\"\r\n//             style={[styles.footer, {\r\n//                 backgroundColor: colors.background\r\n//             }]}\r\n//         >\r\n//             <Text style={[styles.text_footer, {\r\n//                 color: colors.text\r\n//             }]}>Username</Text>\r\n//             <View style={styles.action}>\r\n//                 <FontAwesome \r\n//                     name=\"user-o\"\r\n//                     color={colors.text}\r\n//                     size={20}\r\n//                 />\r\n//                 <TextInput \r\n//                     placeholder=\"Your Username\"\r\n//                     placeholderTextColor=\"#666666\"\r\n//                     style={[styles.textInput, {\r\n//                         color: colors.text\r\n//                     }]}\r\n//                     autoCapitalize=\"none\"\r\n//                     onChangeText={(val) => textInputChange(val)}\r\n//                     onEndEditing={(e)=>handleValidUser(e.nativeEvent.text)}\r\n//                 />\r\n//                 {data.check_textInputChange ? \r\n//                 <Animatable.View\r\n//                     animation=\"bounceIn\"\r\n//                 >\r\n//                     <Feather \r\n//                         name=\"check-circle\"\r\n//                         color=\"green\"\r\n//                         size={20}\r\n//                     />\r\n//                 </Animatable.View>\r\n//                 : null}\r\n//             </View>\r\n//             { data.isValidUser ? null : \r\n//             <Animatable.View animation=\"fadeInLeft\" duration={500}>\r\n//             <Text style={styles.errorMsg}>Username must be 4 characters long.</Text>\r\n//             </Animatable.View>\r\n//             }\r\n            \r\n\r\n//             <Text style={[styles.text_footer, {\r\n//                 color: colors.text,\r\n//                 marginTop: 35\r\n//             }]}>Password</Text>\r\n//             <View style={styles.action}>\r\n//                 <Feather \r\n//                     name=\"lock\"\r\n//                     color={colors.text}\r\n//                     size={20}\r\n//                 />\r\n//                 <TextInput \r\n//                     placeholder=\"Your Password\"\r\n//                     placeholderTextColor=\"#666666\"\r\n//                     secureTextEntry={data.secureTextEntry ? true : false}\r\n//                     style={[styles.textInput, {\r\n//                         color: colors.text\r\n//                     }]}\r\n//                     autoCapitalize=\"none\"\r\n//                     onChangeText={(val) => handlePasswordChange(val)}\r\n//                 />\r\n//                 <TouchableOpacity\r\n//                     onPress={updateSecureTextEntry}\r\n//                 >\r\n//                     {data.secureTextEntry ? \r\n//                     <Feather \r\n//                         name=\"eye-off\"\r\n//                         color=\"grey\"\r\n//                         size={20}\r\n//                     />\r\n//                     :\r\n//                     <Feather \r\n//                         name=\"eye\"\r\n//                         color=\"grey\"\r\n//                         size={20}\r\n//                     />\r\n//                     }\r\n//                 </TouchableOpacity>\r\n//             </View>\r\n//             { data.isValidPassword ? null : \r\n//             <Animatable.View animation=\"fadeInLeft\" duration={500}>\r\n//             <Text style={styles.errorMsg}>Password must be 8 characters long.</Text>\r\n//             </Animatable.View>\r\n//             }\r\n            \r\n\r\n//             <TouchableOpacity>\r\n//                 <Text style={{color: '#009387', marginTop:15}}>Forgot password?</Text>\r\n//             </TouchableOpacity>\r\n//             <View style={styles.button}>\r\n//                 <TouchableOpacity\r\n//                     style={styles.signIn}\r\n//                     onPress={() => {loginHandle( data.username, data.password )}}\r\n//                 >\r\n//                 <LinearGradient\r\n//                     colors={['#08d4c4', '#01ab9d']}\r\n//                     style={styles.signIn}\r\n//                 >\r\n//                     <Text style={[styles.textSign, {\r\n//                         color:'#fff'\r\n//                     }]}>Sign In</Text>\r\n//                 </LinearGradient>\r\n//                 </TouchableOpacity>\r\n\r\n//                 <TouchableOpacity\r\n//                     onPress={() => navigation.navigate('SignUpScreen')}\r\n//                     style={[styles.signIn, {\r\n//                         borderColor: '#009387',\r\n//                         borderWidth: 1,\r\n//                         marginTop: 15\r\n//                     }]}\r\n//                 >\r\n//                     <Text style={[styles.textSign, {\r\n//                         color: '#009387'\r\n//                     }]}>Sign Up</Text>\r\n//                 </TouchableOpacity>\r\n//             </View>\r\n//         </Animatable.View>\r\n//       </View>\r\n//     );\r\n// };\r\n\r\n// export default SignInScreen;\r\n\r\n// const styles = StyleSheet.create({\r\n//     container: {\r\n//       flex: 1, \r\n//       backgroundColor: '#009387'\r\n//     },\r\n//     header: {\r\n//         flex: 1,\r\n//         justifyContent: 'flex-end',\r\n//         paddingHorizontal: 20,\r\n//         paddingBottom: 50\r\n//     },\r\n//     footer: {\r\n//         flex: 3,\r\n//         backgroundColor: '#fff',\r\n//         borderTopLeftRadius: 30,\r\n//         borderTopRightRadius: 30,\r\n//         paddingHorizontal: 20,\r\n//         paddingVertical: 30\r\n//     },\r\n//     text_header: {\r\n//         color: '#fff',\r\n//         fontWeight: 'bold',\r\n//         fontSize: 30\r\n//     },\r\n//     text_footer: {\r\n//         color: '#05375a',\r\n//         fontSize: 18\r\n//     },\r\n//     action: {\r\n//         flexDirection: 'row',\r\n//         marginTop: 10,\r\n//         borderBottomWidth: 1,\r\n//         borderBottomColor: '#f2f2f2',\r\n//         paddingBottom: 5\r\n//     },\r\n//     actionError: {\r\n//         flexDirection: 'row',\r\n//         marginTop: 10,\r\n//         borderBottomWidth: 1,\r\n//         borderBottomColor: '#FF0000',\r\n//         paddingBottom: 5\r\n//     },\r\n//     textInput: {\r\n//         flex: 1,\r\n//         marginTop: Platform.OS === 'ios' ? 0 : -12,\r\n//         paddingLeft: 10,\r\n//         color: '#05375a',\r\n//     },\r\n//     errorMsg: {\r\n//         color: '#FF0000',\r\n//         fontSize: 14,\r\n//     },\r\n//     button: {\r\n//         alignItems: 'center',\r\n//         marginTop: 50\r\n//     },\r\n//     signIn: {\r\n//         width: '100%',\r\n//         height: 50,\r\n//         justifyContent: 'center',\r\n//         alignItems: 'center',\r\n//         borderRadius: 10\r\n//     },\r\n//     textSign: {\r\n//         fontSize: 18,\r\n//         fontWeight: 'bold'\r\n//     }\r\n//   });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React from 'react';\r\nimport { View, StyleSheet, Text, Image, Dimensions, StatusBar, TouchableOpacity } from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport * as Animatable from 'react-native-animatable';\r\nimport { AntDesign } from '@expo/vector-icons';\r\n\r\n\r\nconst SignUpScreen = ({navigation}) => {\r\n\r\n    return (\r\n        <LinearGradient\r\n        colors={[\"#D6AB6F\", '#D6AB6F', '#B8B8B8', '#B8B8B8']}\r\n        style={styles.linearGradient}\r\n    >\r\n        <StatusBar backgroundColor='#009387' barStyle=\"light-content\" />\r\n\r\n        <View style={styles.content}>\r\n            {/* <Text style={styles.text}>Log In</Text> */}\r\n            <Animatable.Image\r\n                animation=\"fadeInUpBig\"\r\n                duraton=\"1500\"\r\n                source={require('../assets/welcome.png')}\r\n                style={styles.logo}\r\n                resizeMode=\"stretch\"\r\n            />\r\n            <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('SignUpScreen')}>\r\n                <View></View>\r\n                {/* <Text style={styles.textSign}>Next</Text> */}\r\n                <AntDesign name=\"arrowright\" size={20} color=\"white\" style={styles.arrowIcon} />\r\n            </TouchableOpacity>\r\n        </View>\r\n    </LinearGradient>\r\n\r\n\r\n    );\r\n};\r\n\r\n export default SignUpScreen;\r\n\r\n const styles = StyleSheet.create({\r\n\r\n    linearGradient: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n    },\r\n    content: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        height: \"70%\"\r\n    },\r\n    logo: {\r\n        width: 237,\r\n        height: 57,\r\n    },\r\n    text: {\r\n        color: 'white',\r\n        fontSize: 24,\r\n        fontWeight: 'bold'\r\n    },\r\n    button: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: 'flex-start',\r\n        marginTop: 30,\r\n        borderRadius: 50,\r\n        borderColor: \"#FFFFFF\",\r\n        borderWidth: 1,\r\n        width: 237,\r\n        height: 57,\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    arrowIcon: {\r\n        marginRight: 20\r\n    },\r\n    textSign: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        fontWeight: 400,\r\n        fontSize: 18,\r\n        lineHeight: 21,\r\n    },\r\n     signIn: {\r\n        width: '100%',\r\n        height: 50,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: 10\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}