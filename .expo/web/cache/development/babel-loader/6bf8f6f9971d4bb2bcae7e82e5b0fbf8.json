{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react-native-web/dist/index\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport { Component } from \"react-native-web/dist/index\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { StatusBarIOS } from \"react-native-web/dist/index\";\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport CountryPicker from 'react-native-country-picker-modal';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CountrySelect = function (_Component) {\n  _inherits(CountrySelect, _Component);\n\n  var _super = _createSuper(CountrySelect);\n\n  function CountrySelect(props) {\n    var _this;\n\n    _classCallCheck(this, CountrySelect);\n\n    StatusBarIOS.setHidden(true);\n    _this = _super.call(this, props);\n    _this.state = {\n      cca2: 'US'\n    };\n    return _this;\n  }\n\n  _createClass(CountrySelect, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Text, {\n          style: styles.welcome,\n          children: \"Welcome to Country Picker !\"\n        }), _jsx(CountryPicker, {\n          onSelect: function onSelect(value) {\n            return _this2.setState({\n              country: value,\n              cca2: value.cca2\n            });\n          },\n          cca2: this.state.cca2,\n          translation: \"eng\"\n        }), _jsx(Text, {\n          style: styles.instructions,\n          children: \"press on the flag\"\n        }), this.state.country && _jsx(Text, {\n          style: styles.data,\n          children: JSON.stringify(this.state.country, null, 2)\n        })]\n      });\n    }\n  }]);\n\n  return CountrySelect;\n}(Component);\n\nexport default CountrySelect;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  welcome: {\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 10\n  },\n  instructions: {\n    fontSize: 12,\n    textAlign: 'center',\n    color: '#888',\n    marginBottom: 5\n  },\n  data: {\n    padding: 15,\n    marginTop: 10,\n    backgroundColor: '#ddd',\n    borderColor: '#888',\n    borderWidth: 1 / PixelRatio.get(),\n    color: '#777'\n  }\n});","map":{"version":3,"sources":["C:/Users/Serious/Desktop/Native/Новая папка (2)/my-app/components/CountrySelect.js"],"names":["React","Component","StatusBarIOS","CountryPicker","CountrySelect","props","setHidden","state","cca2","styles","container","welcome","value","setState","country","instructions","data","JSON","stringify","StyleSheet","create","flex","justifyContent","alignItems","fontSize","textAlign","margin","color","marginBottom","padding","marginTop","backgroundColor","borderColor","borderWidth","PixelRatio","get"],"mappings":";;;;;;;;;;OAAOA,K;;SAEHC,S;;;;SAIAC,Y;;AAIF,OAAOC,aAAP,MAA0B,mCAA1B;;;;IAEMC,a;;;;;AACJ,yBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChBH,IAAAA,YAAY,CAACI,SAAb,CAAuB,IAAvB;AACA,8BAAMD,KAAN;AACA,UAAKE,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAHgB;AAMjB;;;;WACD,kBAAS;AAAA;;AACP,aACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,mBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAED,MAAM,CAACE,OAApB;AAAA;AAAA,UADF,EAIE,KAAC,aAAD;AACE,UAAA,QAAQ,EAAE,kBAACC,KAAD;AAAA,mBAAU,MAAI,CAACC,QAAL,CAAc;AAACC,cAAAA,OAAO,EAAEF,KAAV;AAAiBJ,cAAAA,IAAI,EAAEI,KAAK,CAACJ;AAA7B,aAAd,CAAV;AAAA,WADZ;AAEE,UAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAFnB;AAGE,UAAA,WAAW,EAAC;AAHd,UAJF,EASE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEC,MAAM,CAACM,YAApB;AAAA;AAAA,UATF,EAYG,KAAKR,KAAL,CAAWO,OAAX,IACC,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEL,MAAM,CAACO,IAApB;AAAA,oBACGC,IAAI,CAACC,SAAL,CAAe,KAAKX,KAAL,CAAWO,OAA1B,EAAmC,IAAnC,EAAyC,CAAzC;AADH,UAbJ;AAAA,QADF;AAoBD;;;;EA7ByBb,S;;AA+B5B,eAAeG,aAAf;AACA,IAAMK,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,SAAS,EAAE;AACTW,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE;AAHH,GADoB;AAM/BZ,EAAAA,OAAO,EAAE;AACPa,IAAAA,QAAQ,EAAE,EADH;AAEPC,IAAAA,SAAS,EAAE,QAFJ;AAGPC,IAAAA,MAAM,EAAE;AAHD,GANsB;AAW/BX,EAAAA,YAAY,EAAE;AACZS,IAAAA,QAAQ,EAAE,EADE;AAEZC,IAAAA,SAAS,EAAE,QAFC;AAGZE,IAAAA,KAAK,EAAE,MAHK;AAIZC,IAAAA,YAAY,EAAE;AAJF,GAXiB;AAiB/BZ,EAAAA,IAAI,EAAE;AACJa,IAAAA,OAAO,EAAE,EADL;AAEJC,IAAAA,SAAS,EAAE,EAFP;AAGJC,IAAAA,eAAe,EAAE,MAHb;AAIJC,IAAAA,WAAW,EAAE,MAJT;AAKJC,IAAAA,WAAW,EAAE,IAAIC,UAAU,CAACC,GAAX,EALb;AAMJR,IAAAA,KAAK,EAAE;AANH;AAjByB,CAAlB,CAAf","sourcesContent":["import React, {\r\n    AppRegistry,\r\n    Component,\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    StatusBarIOS,\r\n    PixelRatio\r\n  } from 'react-native';\r\n  \r\n  import CountryPicker from 'react-native-country-picker-modal';\r\n  \r\n  class CountrySelect extends Component {\r\n    constructor(props){\r\n      StatusBarIOS.setHidden(true);\r\n      super(props);\r\n      this.state = {\r\n        cca2: 'US'\r\n      };\r\n    }\r\n    render() {\r\n      return (\r\n        <View style={styles.container}>\r\n          <Text style={styles.welcome}>\r\n            Welcome to Country Picker !\r\n          </Text>\r\n          <CountryPicker\r\n            onSelect={(value)=> this.setState({country: value, cca2: value.cca2})}\r\n            cca2={this.state.cca2}\r\n            translation='eng'\r\n          />\r\n          <Text style={styles.instructions}>\r\n            press on the flag\r\n          </Text>\r\n          {this.state.country &&\r\n            <Text style={styles.data}>\r\n              {JSON.stringify(this.state.country, null, 2)}\r\n            </Text>\r\n          }\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n  export default CountrySelect\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center'\r\n    },\r\n    welcome: {\r\n      fontSize: 20,\r\n      textAlign: 'center',\r\n      margin: 10,\r\n    },\r\n    instructions: {\r\n      fontSize: 12,\r\n      textAlign: 'center',\r\n      color: '#888',\r\n      marginBottom: 5,\r\n    },\r\n    data: {\r\n      padding: 15,\r\n      marginTop: 10,\r\n      backgroundColor: '#ddd',\r\n      borderColor: '#888',\r\n      borderWidth: 1 / PixelRatio.get(),\r\n      color: '#777'\r\n    }\r\n  });"]},"metadata":{},"sourceType":"module"}