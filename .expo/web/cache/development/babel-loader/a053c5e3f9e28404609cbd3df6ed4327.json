{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["// import React from 'react';\r\n// import { \r\n//     View, \r\n//     Text, \r\n//     TouchableOpacity, \r\n//     TextInput,\r\n//     Platform,\r\n//     StyleSheet ,\r\n//     StatusBar,\r\n//     Alert\r\n// } from 'react-native';\r\n// import * as Animatable from 'react-native-animatable';\r\n// import LinearGradient from 'react-native-linear-gradient';\r\n// import FontAwesome from 'react-native-vector-icons/FontAwesome';\r\n// import Feather from 'react-native-vector-icons/Feather';\r\n\r\n// import { useTheme } from 'react-native-paper';\r\n\r\n// import { AuthContext } from '../components/context';\r\n\r\n// import Users from '../model/users';\r\n\r\n// const SignInScreen = ({navigation}) => {\r\n\r\n//     const [data, setData] = React.useState({\r\n//         username: '',\r\n//         password: '',\r\n//         check_textInputChange: false,\r\n//         secureTextEntry: true,\r\n//         isValidUser: true,\r\n//         isValidPassword: true,\r\n//     });\r\n\r\n//     const { colors } = useTheme();\r\n\r\n//     const { signIn } = React.useContext(AuthContext);\r\n\r\n//     const textInputChange = (val) => {\r\n//         if( val.trim().length >= 4 ) {\r\n//             setData({\r\n//                 ...data,\r\n//                 username: val,\r\n//                 check_textInputChange: true,\r\n//                 isValidUser: true\r\n//             });\r\n//         } else {\r\n//             setData({\r\n//                 ...data,\r\n//                 username: val,\r\n//                 check_textInputChange: false,\r\n//                 isValidUser: false\r\n//             });\r\n//         }\r\n//     }\r\n\r\n//     const handlePasswordChange = (val) => {\r\n//         if( val.trim().length >= 8 ) {\r\n//             setData({\r\n//                 ...data,\r\n//                 password: val,\r\n//                 isValidPassword: true\r\n//             });\r\n//         } else {\r\n//             setData({\r\n//                 ...data,\r\n//                 password: val,\r\n//                 isValidPassword: false\r\n//             });\r\n//         }\r\n//     }\r\n\r\n//     const updateSecureTextEntry = () => {\r\n//         setData({\r\n//             ...data,\r\n//             secureTextEntry: !data.secureTextEntry\r\n//         });\r\n//     }\r\n\r\n//     const handleValidUser = (val) => {\r\n//         if( val.trim().length >= 4 ) {\r\n//             setData({\r\n//                 ...data,\r\n//                 isValidUser: true\r\n//             });\r\n//         } else {\r\n//             setData({\r\n//                 ...data,\r\n//                 isValidUser: false\r\n//             });\r\n//         }\r\n//     }\r\n\r\n//     const loginHandle = (userName, password) => {\r\n\r\n//         const foundUser = Users.filter( item => {\r\n//             return userName == item.username && password == item.password;\r\n//         } );\r\n\r\n//         if ( data.username.length == 0 || data.password.length == 0 ) {\r\n//             Alert.alert('Wrong Input!', 'Username or password field cannot be empty.', [\r\n//                 {text: 'Okay'}\r\n//             ]);\r\n//             return;\r\n//         }\r\n\r\n//         if ( foundUser.length == 0 ) {\r\n//             Alert.alert('Invalid User!', 'Username or password is incorrect.', [\r\n//                 {text: 'Okay'}\r\n//             ]);\r\n//             return;\r\n//         }\r\n//         signIn(foundUser);\r\n//     }\r\n\r\n//     return (\r\n//       <View style={styles.container}>\r\n//           <StatusBar backgroundColor='#009387' barStyle=\"light-content\"/>\r\n//         <View style={styles.header}>\r\n//             <Text style={styles.text_header}>Welcome!</Text>\r\n//         </View>\r\n//         <Animatable.View \r\n//             animation=\"fadeInUpBig\"\r\n//             style={[styles.footer, {\r\n//                 backgroundColor: colors.background\r\n//             }]}\r\n//         >\r\n//             <Text style={[styles.text_footer, {\r\n//                 color: colors.text\r\n//             }]}>Username</Text>\r\n//             <View style={styles.action}>\r\n//                 <FontAwesome \r\n//                     name=\"user-o\"\r\n//                     color={colors.text}\r\n//                     size={20}\r\n//                 />\r\n//                 <TextInput \r\n//                     placeholder=\"Your Username\"\r\n//                     placeholderTextColor=\"#666666\"\r\n//                     style={[styles.textInput, {\r\n//                         color: colors.text\r\n//                     }]}\r\n//                     autoCapitalize=\"none\"\r\n//                     onChangeText={(val) => textInputChange(val)}\r\n//                     onEndEditing={(e)=>handleValidUser(e.nativeEvent.text)}\r\n//                 />\r\n//                 {data.check_textInputChange ? \r\n//                 <Animatable.View\r\n//                     animation=\"bounceIn\"\r\n//                 >\r\n//                     <Feather \r\n//                         name=\"check-circle\"\r\n//                         color=\"green\"\r\n//                         size={20}\r\n//                     />\r\n//                 </Animatable.View>\r\n//                 : null}\r\n//             </View>\r\n//             { data.isValidUser ? null : \r\n//             <Animatable.View animation=\"fadeInLeft\" duration={500}>\r\n//             <Text style={styles.errorMsg}>Username must be 4 characters long.</Text>\r\n//             </Animatable.View>\r\n//             }\r\n            \r\n\r\n//             <Text style={[styles.text_footer, {\r\n//                 color: colors.text,\r\n//                 marginTop: 35\r\n//             }]}>Password</Text>\r\n//             <View style={styles.action}>\r\n//                 <Feather \r\n//                     name=\"lock\"\r\n//                     color={colors.text}\r\n//                     size={20}\r\n//                 />\r\n//                 <TextInput \r\n//                     placeholder=\"Your Password\"\r\n//                     placeholderTextColor=\"#666666\"\r\n//                     secureTextEntry={data.secureTextEntry ? true : false}\r\n//                     style={[styles.textInput, {\r\n//                         color: colors.text\r\n//                     }]}\r\n//                     autoCapitalize=\"none\"\r\n//                     onChangeText={(val) => handlePasswordChange(val)}\r\n//                 />\r\n//                 <TouchableOpacity\r\n//                     onPress={updateSecureTextEntry}\r\n//                 >\r\n//                     {data.secureTextEntry ? \r\n//                     <Feather \r\n//                         name=\"eye-off\"\r\n//                         color=\"grey\"\r\n//                         size={20}\r\n//                     />\r\n//                     :\r\n//                     <Feather \r\n//                         name=\"eye\"\r\n//                         color=\"grey\"\r\n//                         size={20}\r\n//                     />\r\n//                     }\r\n//                 </TouchableOpacity>\r\n//             </View>\r\n//             { data.isValidPassword ? null : \r\n//             <Animatable.View animation=\"fadeInLeft\" duration={500}>\r\n//             <Text style={styles.errorMsg}>Password must be 8 characters long.</Text>\r\n//             </Animatable.View>\r\n//             }\r\n            \r\n\r\n//             <TouchableOpacity>\r\n//                 <Text style={{color: '#009387', marginTop:15}}>Forgot password?</Text>\r\n//             </TouchableOpacity>\r\n//             <View style={styles.button}>\r\n//                 <TouchableOpacity\r\n//                     style={styles.signIn}\r\n//                     onPress={() => {loginHandle( data.username, data.password )}}\r\n//                 >\r\n//                 <LinearGradient\r\n//                     colors={['#08d4c4', '#01ab9d']}\r\n//                     style={styles.signIn}\r\n//                 >\r\n//                     <Text style={[styles.textSign, {\r\n//                         color:'#fff'\r\n//                     }]}>Sign In</Text>\r\n//                 </LinearGradient>\r\n//                 </TouchableOpacity>\r\n\r\n//                 <TouchableOpacity\r\n//                     onPress={() => navigation.navigate('SignUpScreen')}\r\n//                     style={[styles.signIn, {\r\n//                         borderColor: '#009387',\r\n//                         borderWidth: 1,\r\n//                         marginTop: 15\r\n//                     }]}\r\n//                 >\r\n//                     <Text style={[styles.textSign, {\r\n//                         color: '#009387'\r\n//                     }]}>Sign Up</Text>\r\n//                 </TouchableOpacity>\r\n//             </View>\r\n//         </Animatable.View>\r\n//       </View>\r\n//     );\r\n// };\r\n\r\n// export default SignInScreen;\r\n\r\n// const styles = StyleSheet.create({\r\n//     container: {\r\n//       flex: 1, \r\n//       backgroundColor: '#009387'\r\n//     },\r\n//     header: {\r\n//         flex: 1,\r\n//         justifyContent: 'flex-end',\r\n//         paddingHorizontal: 20,\r\n//         paddingBottom: 50\r\n//     },\r\n//     footer: {\r\n//         flex: 3,\r\n//         backgroundColor: '#fff',\r\n//         borderTopLeftRadius: 30,\r\n//         borderTopRightRadius: 30,\r\n//         paddingHorizontal: 20,\r\n//         paddingVertical: 30\r\n//     },\r\n//     text_header: {\r\n//         color: '#fff',\r\n//         fontWeight: 'bold',\r\n//         fontSize: 30\r\n//     },\r\n//     text_footer: {\r\n//         color: '#05375a',\r\n//         fontSize: 18\r\n//     },\r\n//     action: {\r\n//         flexDirection: 'row',\r\n//         marginTop: 10,\r\n//         borderBottomWidth: 1,\r\n//         borderBottomColor: '#f2f2f2',\r\n//         paddingBottom: 5\r\n//     },\r\n//     actionError: {\r\n//         flexDirection: 'row',\r\n//         marginTop: 10,\r\n//         borderBottomWidth: 1,\r\n//         borderBottomColor: '#FF0000',\r\n//         paddingBottom: 5\r\n//     },\r\n//     textInput: {\r\n//         flex: 1,\r\n//         marginTop: Platform.OS === 'ios' ? 0 : -12,\r\n//         paddingLeft: 10,\r\n//         color: '#05375a',\r\n//     },\r\n//     errorMsg: {\r\n//         color: '#FF0000',\r\n//         fontSize: 14,\r\n//     },\r\n//     button: {\r\n//         alignItems: 'center',\r\n//         marginTop: 50\r\n//     },\r\n//     signIn: {\r\n//         width: '100%',\r\n//         height: 50,\r\n//         justifyContent: 'center',\r\n//         alignItems: 'center',\r\n//         borderRadius: 10\r\n//     },\r\n//     textSign: {\r\n//         fontSize: 18,\r\n//         fontWeight: 'bold'\r\n//     }\r\n//   });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { \r\n//     View, \r\n//     Text, \r\n//     TouchableOpacity, \r\n//     TextInput,\r\n//     Platform,\r\n//     StyleSheet ,\r\n//     StatusBar,\r\n//     Alert\r\n// } from 'react-native';\r\n// import * as Animatable from 'react-native-animatable';\r\n// import LinearGradient from 'react-native-linear-gradient';\r\n// import FontAwesome from 'react-native-vector-icons/FontAwesome';\r\n// import Feather from 'react-native-vector-icons/Feather';\r\n\r\n// import { useTheme } from 'react-native-paper';\r\n\r\n// import { AuthContext } from '../components/context';\r\n\r\n// import React from 'react';\r\n// import { View, StyleSheet, Text, Image, Dimensions, StatusBar, TouchableOpacity } from 'react-native';\r\n// import { LinearGradient } from 'expo-linear-gradient';\r\n// import * as Animatable from 'react-native-animatable';\r\n// import { AntDesign } from '@expo/vector-icons';\r\n\r\n\r\n// const SignInScreen = ({navigation}) => {\r\n\r\n//     return (\r\n//         <LinearGradient\r\n//         colors={[\"#D6AB6F\", '#D6AB6F', '#B8B8B8', '#B8B8B8']}\r\n//         style={styles.linearGradient}\r\n//     >\r\n//         <StatusBar backgroundColor='#009387' barStyle=\"light-content\" />\r\n\r\n//         <View style={styles.content}>\r\n//             {/* <Text style={styles.text}>Log In</Text> */}\r\n//             <Animatable.Image\r\n//                 animation=\"fadeInUpBig\"\r\n//                 duraton=\"1500\"\r\n//                 source={require('../assets/welcome.png')}\r\n//                 style={styles.logo}\r\n//                 resizeMode=\"stretch\"\r\n//             />\r\n//             <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('SignUpScreen')}>\r\n//                 <View></View>\r\n//                 {/* <Text style={styles.textSign}>Next</Text> */}\r\n//                 <AntDesign name=\"arrowright\" size={20} color=\"white\" style={styles.arrowIcon} />\r\n//             </TouchableOpacity>\r\n//         </View>\r\n//     </LinearGradient>\r\n\r\n\r\n//     );\r\n// };\r\n\r\n//  export default SignInScreen;\r\n\r\n//  const styles = StyleSheet.create({\r\n\r\n//     linearGradient: {\r\n//         flex: 1,\r\n//         justifyContent: \"center\",\r\n//     },\r\n//     content: {\r\n//         display: \"flex\",\r\n//         flexDirection: \"column\",\r\n//         alignItems: \"center\",\r\n//         justifyContent: \"space-between\",\r\n//         height: \"70%\"\r\n//     },\r\n//     logo: {\r\n//         width: 237,\r\n//         height: 57,\r\n//     },\r\n//     text: {\r\n//         color: 'white',\r\n//         fontSize: 24,\r\n//         fontWeight: 'bold'\r\n//     },\r\n//     button: {\r\n//         display: \"flex\",\r\n//         flexDirection: \"row\",\r\n//         alignItems: 'flex-start',\r\n//         marginTop: 30,\r\n//         borderRadius: 50,\r\n//         borderColor: \"#FFFFFF\",\r\n//         borderWidth: 1,\r\n//         width: 237,\r\n//         height: 57,\r\n//         alignItems: \"center\",\r\n//         justifyContent: \"space-between\",\r\n//     },\r\n//     arrowIcon: {\r\n//         marginRight: 20\r\n//     },\r\n//     textSign: {\r\n//         color: 'white',\r\n//         fontWeight: 'bold',\r\n//         fontWeight: 400,\r\n//         fontSize: 18,\r\n//         lineHeight: 21,\r\n//     }\r\n// });"]},"metadata":{},"sourceType":"script"}