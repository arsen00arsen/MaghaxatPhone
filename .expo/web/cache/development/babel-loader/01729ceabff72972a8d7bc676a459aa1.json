{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport * as Animatable from 'react-native-animatable';\nimport Feather from \"@expo/vector-icons/Feather\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CreatePasswordScreen = function CreatePasswordScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState({\n    password: '',\n    confirm_password: '',\n    check_textInputChange: false,\n    secureTextEntry: true,\n    confirm_secureTextEntry: true\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  var handlePasswordChange = function handlePasswordChange(val) {\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      password: val\n    }));\n  };\n\n  var handleConfirmPasswordChange = function handleConfirmPasswordChange(val) {\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      confirm_password: val\n    }));\n  };\n\n  var updateSecureTextEntry = function updateSecureTextEntry() {\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      secureTextEntry: !data.secureTextEntry\n    }));\n  };\n\n  var updateConfirmSecureTextEntry = function updateConfirmSecureTextEntry() {\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      confirm_secureTextEntry: !data.confirm_secureTextEntry\n    }));\n  };\n\n  return _jsxs(LinearGradient, {\n    colors: [\"#D6AB6F\", '#D6AB6F', '#B8B8B8', '#B8B8B8'],\n    style: styles.linearGradient,\n    children: [_jsx(StatusBar, {\n      backgroundColor: \"#009387\",\n      barStyle: \"light-content\"\n    }), _jsxs(View, {\n      style: styles.content,\n      children: [_jsx(Text, {\n        style: styles.text,\n        children: \"Log In\"\n      }), _jsx(Animatable.Image, {\n        animation: \"fadeInUpBig\",\n        duraton: \"1500\",\n        source: require(\"../assets/passWord.png\"),\n        style: styles.logo,\n        resizeMode: \"stretch\"\n      }), _jsxs(View, {\n        children: [_jsxs(View, {\n          style: styles.action,\n          children: [_jsxs(View, {\n            style: styles.passHeader,\n            children: [_jsx(Text, {\n              style: styles.inputHeader,\n              children: \"Password\"\n            }), _jsx(TouchableOpacity, {\n              onPress: updateSecureTextEntry,\n              children: data.secureTextEntry ? _jsx(Feather, {\n                style: styles.eyeIcon,\n                name: \"eye-off\",\n                color: \"grey\",\n                size: 20\n              }) : _jsx(Feather, {\n                style: styles.eyeIcon,\n                name: \"eye\",\n                color: \"grey\",\n                size: 20\n              })\n            })]\n          }), _jsx(TextInput, {\n            placeholderTextColor: \"#666666\",\n            secureTextEntry: data.secureTextEntry ? true : false,\n            style: styles.textInput,\n            autoCapitalize: \"none\",\n            onChangeText: function onChangeText(val) {\n              return handlePasswordChange(val);\n            }\n          })]\n        }), _jsxs(View, {\n          style: styles.action,\n          children: [_jsxs(View, {\n            style: styles.passHeader,\n            children: [_jsx(Text, {\n              style: styles.inputHeader,\n              children: \"Confirm Your Password\"\n            }), _jsx(TouchableOpacity, {\n              onPress: updateSecureTextEntry,\n              children: data.secureTextEntry ? _jsx(Feather, {\n                style: styles.eyeIcon,\n                name: \"eye-off\",\n                color: \"grey\",\n                size: 20\n              }) : _jsx(Feather, {\n                style: styles.eyeIcon,\n                name: \"eye\",\n                color: \"grey\",\n                size: 20\n              })\n            })]\n          }), _jsx(TextInput, {\n            secureTextEntry: data.confirm_secureTextEntry ? true : false,\n            style: styles.textInput,\n            autoCapitalize: \"none\",\n            onChangeText: function onChangeText(val) {\n              return handleConfirmPasswordChange(val);\n            }\n          })]\n        })]\n      }), _jsx(View, {\n        children: _jsxs(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            return navigation.navigate('CreatePasswordScreen');\n          },\n          children: [_jsx(View, {}), _jsx(Text, {\n            style: styles.textSign,\n            children: \"Next\"\n          }), _jsx(AntDesign, {\n            name: \"arrowright\",\n            size: 20,\n            color: \"white\",\n            style: styles.arrowIcon\n          })]\n        })\n      })]\n    })]\n  });\n};\n\nexport default CreatePasswordScreen;\nvar styles = StyleSheet.create({\n  linearGradient: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  content: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    height: \"70%\"\n  },\n  logo: {\n    width: 166,\n    height: 166\n  },\n  text: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  button: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: 'center',\n    marginTop: 15,\n    borderRadius: 50,\n    borderColor: \"#FFFFFF\",\n    borderWidth: 1,\n    width: 237,\n    height: 57,\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  arrowIcon: {\n    marginRight: 20\n  },\n  textSign: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 18,\n    lineHeight: 21\n  },\n  text_footer: {\n    color: '#05375a',\n    fontSize: 18\n  },\n  action: {\n    flexDirection: 'column',\n    marginTop: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#f2f2f2',\n    backgroundColor: \"white\",\n    width: 250,\n    height: 60,\n    borderRadius: 4,\n    alignItems: \"start\"\n  },\n  textInput: {\n    flex: 1,\n    paddingLeft: 10,\n    color: '#05375a',\n    height: \"100%\",\n    width: \"100%\"\n  },\n  errorMsg: {\n    color: '#FF0000',\n    fontSize: 14\n  },\n  signIn: {\n    width: 237,\n    height: 57,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: \"30%\"\n  },\n  eyeIcon: {\n    paddingRight: 20,\n    paddingTop: 3\n  },\n  inputHeader: {\n    fontSize: 12,\n    color: \"#828282\",\n    paddingTop: 10,\n    paddingLeft: 12\n  },\n  passHeader: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    width: \"100%\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Serious/Desktop/Native/Новая папка (2)/my-app/screens/CreatePasswordScreen.js"],"names":["React","LinearGradient","Animatable","Feather","AntDesign","CreatePasswordScreen","navigation","useState","password","confirm_password","check_textInputChange","secureTextEntry","confirm_secureTextEntry","data","setData","handlePasswordChange","val","handleConfirmPasswordChange","updateSecureTextEntry","updateConfirmSecureTextEntry","styles","linearGradient","content","text","require","logo","action","passHeader","inputHeader","eyeIcon","textInput","button","navigate","textSign","arrowIcon","StyleSheet","create","flex","justifyContent","display","flexDirection","alignItems","height","width","color","fontSize","fontWeight","marginTop","borderRadius","borderColor","borderWidth","marginRight","lineHeight","text_footer","borderBottomWidth","borderBottomColor","backgroundColor","paddingLeft","errorMsg","signIn","paddingRight","paddingTop"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { View, StyleSheet, Text, Image, Dimensions, StatusBar, TouchableOpacity, TextInput } from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport * as Animatable from 'react-native-animatable';\r\nimport Feather from 'react-native-vector-icons/Feather';\r\nimport { AntDesign } from '@expo/vector-icons';\r\n\r\n\r\nconst CreatePasswordScreen = ({ navigation }) => {\r\n\r\n    const [data, setData] = React.useState({\r\n        password: '',\r\n        confirm_password: '',\r\n        check_textInputChange: false,\r\n        secureTextEntry: true,\r\n        confirm_secureTextEntry: true,\r\n    });\r\n\r\n\r\n\r\n    const handlePasswordChange = (val) => {\r\n        setData({\r\n            ...data,\r\n            password: val\r\n        });\r\n    }\r\n\r\n    const handleConfirmPasswordChange = (val) => {\r\n        setData({\r\n            ...data,\r\n            confirm_password: val\r\n        });\r\n    }\r\n\r\n    const updateSecureTextEntry = () => {\r\n        setData({\r\n            ...data,\r\n            secureTextEntry: !data.secureTextEntry\r\n        });\r\n    }\r\n\r\n    const updateConfirmSecureTextEntry = () => {\r\n        setData({\r\n            ...data,\r\n            confirm_secureTextEntry: !data.confirm_secureTextEntry\r\n        });\r\n    }\r\n\r\n    return (\r\n        <LinearGradient\r\n            colors={[\"#D6AB6F\", '#D6AB6F', '#B8B8B8', '#B8B8B8']}\r\n            style={styles.linearGradient}\r\n        >\r\n            <StatusBar backgroundColor='#009387' barStyle=\"light-content\" />\r\n            <View style={styles.content}>\r\n                <Text style={styles.text}>Log In</Text>\r\n                <Animatable.Image\r\n                    animation=\"fadeInUpBig\"\r\n                    duraton=\"1500\"\r\n                    source={require('../assets/passWord.png')}\r\n                    style={styles.logo}\r\n                    resizeMode=\"stretch\"\r\n                />\r\n                <View>\r\n                    <View style={styles.action}>\r\n                        <View style={styles.passHeader}>\r\n                            <Text style={styles.inputHeader}>Password</Text>\r\n                            <TouchableOpacity\r\n                                onPress={updateSecureTextEntry}\r\n                            >\r\n                                {data.secureTextEntry ?\r\n                                    <Feather\r\n                                        style={styles.eyeIcon}\r\n                                        name=\"eye-off\"\r\n                                        color=\"grey\"\r\n                                        size={20}\r\n                                    />\r\n                                    :\r\n                                    <Feather\r\n                                        style={styles.eyeIcon}\r\n                                        name=\"eye\"\r\n                                        color=\"grey\"\r\n                                        size={20}\r\n                                    />\r\n                                }\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                        <TextInput\r\n                            // placeholder=\"Your Password\"\r\n                            placeholderTextColor=\"#666666\"\r\n                            secureTextEntry={data.secureTextEntry ? true : false}\r\n                            style={styles.textInput}\r\n                            autoCapitalize=\"none\"\r\n                            onChangeText={(val) => handlePasswordChange(val)}\r\n                        />\r\n                    </View>\r\n                    <View style={styles.action}>\r\n                        <View style={styles.passHeader}>\r\n                            <Text style={styles.inputHeader}>Confirm Your Password</Text>\r\n                            <TouchableOpacity\r\n                                onPress={updateSecureTextEntry}\r\n                            >\r\n                                {data.secureTextEntry ?\r\n                                    <Feather\r\n                                        style={styles.eyeIcon}\r\n                                        name=\"eye-off\"\r\n                                        color=\"grey\"\r\n                                        size={20}\r\n                                    />\r\n                                    :\r\n                                    <Feather\r\n                                        style={styles.eyeIcon}\r\n                                        name=\"eye\"\r\n                                        color=\"grey\"\r\n                                        size={20}\r\n                                    />\r\n                                }\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                        <TextInput\r\n                            // placeholder=\"\"\r\n                            secureTextEntry={data.confirm_secureTextEntry ? true : false}\r\n                            style={styles.textInput}\r\n                            autoCapitalize=\"none\"\r\n                            onChangeText={(val) => handleConfirmPasswordChange(val)}\r\n                        />\r\n                    </View>\r\n                </View>\r\n                <View>\r\n                <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('CreatePasswordScreen')}>\r\n                        <View></View>\r\n                        <Text style={styles.textSign}>Next</Text>\r\n                        <AntDesign name=\"arrowright\" size={20} color=\"white\" style={styles.arrowIcon} />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        </LinearGradient>\r\n    );\r\n};\r\n\r\nexport default CreatePasswordScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    linearGradient: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n    },\r\n    content: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        height: \"70%\"\r\n    },\r\n    logo: {\r\n        width: 166,\r\n        height: 166,\r\n    },\r\n    text: {\r\n        color: 'white',\r\n        fontSize: 24,\r\n        fontWeight: 'bold'\r\n    },\r\n    button: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: 'center',\r\n        marginTop: 15,\r\n        borderRadius: 50,\r\n        borderColor: \"#FFFFFF\",\r\n        borderWidth: 1,\r\n        width: 237,\r\n        height: 57,\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    arrowIcon: {\r\n        marginRight: 20\r\n    },\r\n    textSign: {\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        fontSize: 18,\r\n        lineHeight: 21,\r\n    },\r\n    text_footer: {\r\n        color: '#05375a',\r\n        fontSize: 18\r\n    },\r\n\r\n    action: {\r\n        flexDirection: 'column',\r\n        marginTop: 10,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: '#f2f2f2',\r\n        backgroundColor: \"white\",\r\n        width: 250,\r\n        height: 60,\r\n        borderRadius: 4,\r\n        alignItems: \"start\"\r\n    },\r\n    textInput: {\r\n        flex: 1,\r\n        // marginTop: Platform.OS === 'ios' ? 0 : -12,\r\n        paddingLeft: 10,\r\n        color: '#05375a',\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n    },\r\n    errorMsg: {\r\n        color: '#FF0000',\r\n        fontSize: 14,\r\n    },\r\n    signIn: {\r\n        width: 237,\r\n        height: 57,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: \"30%\"\r\n    },\r\n    eyeIcon: {\r\n        paddingRight: 20,\r\n        paddingTop: 3\r\n    },\r\n    inputHeader: {\r\n        fontSize: 12,\r\n        color: \"#828282\",\r\n        paddingTop: 10,\r\n        paddingLeft: 12\r\n    },\r\n    passHeader: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        width: \"100%\"\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}